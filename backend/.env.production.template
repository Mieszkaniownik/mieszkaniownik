# Mieszkaniownik Production Environment Configuration
# Copy this file to backend/.env and fill in your actual values

# =============================================================================
# REQUIRED - MUST BE CONFIGURED
# =============================================================================

# Database Configuration
# Use Docker service name 'postgres' as host
DATABASE_URL="postgresql://postgres:CHANGE_THIS_SECURE_PASSWORD@postgres:5432/mieszkaniownik"

# PostgreSQL Credentials
POSTGRES_DB="mieszkaniownik"
POSTGRES_USER="postgres"
POSTGRES_PASSWORD="CHANGE_THIS_SECURE_PASSWORD"

# JWT Secret - Generate with: openssl rand -base64 32
JWT_SECRET="GENERATE_SECURE_RANDOM_STRING_HERE"

# Frontend URL - Your frontend deployment URL
# Examples:
# - http://YOUR_FRONTEND_IP:5173
# - https://yourfrontend.com
FRONTEND_URL="http://YOUR_FRONTEND_URL:5173"

# Google OAuth 2.0 for User Authentication
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID="your_google_client_id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your_google_client_secret"
GOOGLE_CALLBACK_URL="http://YOUR_VM_IP:5001/auth/google/callback"

# Google AI API Key (for address extraction from scraped data)
# Get from: https://makersuite.google.com/app/apikey
GOOGLE_AI_API_KEY="your_google_ai_api_key"

# =============================================================================
# RECOMMENDED - For Full Functionality
# =============================================================================

# Google Maps API Key (for heatmap generation)
# Get from: https://console.cloud.google.com/google/maps-apis
GOOGLE_MAPS_API_KEY="your_google_maps_api_key"

# Email Configuration (Gmail OAuth2)
# Follow guide: backend/docs/email-setup.md
EMAIL_OAUTH_TYPE="OAuth2"
EMAIL_OAUTH_USER="your-email@gmail.com"
EMAIL_OAUTH_CLIENT_ID="your_email_client_id.apps.googleusercontent.com"
EMAIL_OAUTH_CLIENT_SECRET="your_email_client_secret"
EMAIL_OAUTH_REFRESH_TOKEN="your_email_refresh_token"
EMAIL_OAUTH_ACCESS_TOKEN="your_oauth_access_token"
EMAIL_FROM="Mieszkaniownik <your-email@gmail.com>"

# Discord Bot Configuration (for Discord notifications)
# Create bot: https://discord.com/developers/applications
DISCORD_BOT_TOKEN="your_discord_bot_token"

# =============================================================================
# SYSTEM CONFIGURATION - Keep These Values
# =============================================================================

# Environment
NODE_ENV="production"
PORT="5001"

# Token Expiry (1 hour in milliseconds)
EXPIRY_TIME_MS="3600000"

# Redis Configuration
# Use Docker service name 'redis' as host
REDIS_HOST="redis"
REDIS_PORT="6379"

# Scraper Configuration
# Enable multi-threaded scraping
USE_SCRAPER_THREADS="true"

# =============================================================================
# OPTIONAL - Advanced Configuration
# =============================================================================

# Test Database (for development/testing)
DATABASE_URL_TEST="postgresql://postgres:CHANGE_THIS_SECURE_PASSWORD@postgres:5432/mieszkaniownik_test"

# =============================================================================
# NOTES
# =============================================================================

# 1. Replace all "CHANGE_THIS_*" and "your_*" values with actual credentials
# 2. Never commit this file to git (it's in .gitignore)
# 3. Keep backups of this file in a secure location
# 4. Use strong passwords (at least 20 characters)
# 5. For JWT_SECRET, generate with: openssl rand -base64 32
# 6. For POSTGRES_PASSWORD, use: openssl rand -base64 32

# =============================================================================
# API KEYS SETUP GUIDES
# =============================================================================

# Google OAuth Setup:
# 1. Go to: https://console.cloud.google.com/apis/credentials
# 2. Create OAuth 2.0 Client ID
# 3. Add authorized redirect URI: http://YOUR_VM_IP:5001/auth/google/callback
# 4. Copy Client ID and Client Secret

# Google AI Setup:
# 1. Go to: https://makersuite.google.com/app/apikey
# 2. Create API key
# 3. Enable Generative Language API

# Google Maps Setup:
# 1. Go to: https://console.cloud.google.com/google/maps-apis
# 2. Enable Maps Static API
# 3. Create API key

# Gmail OAuth Setup (for email notifications):
# 1. Use the same OAuth client from above OR create a new one
# 2. Run: npm run oauth2:tokens CLIENT_ID CLIENT_SECRET
# 3. Follow the prompts to get refresh token

# Discord Bot Setup:
# 1. Go to: https://discord.com/developers/applications
# 2. Create New Application
# 3. Go to Bot section and create bot
# 4. Copy bot token
# 5. Enable required intents (Message Content Intent)
# 6. Invite bot to your server
